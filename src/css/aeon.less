
@colorPrimary: #3A568C;
@colorPrimaryLight: #6a82bc;
@colorPrimaryDark: #002e5e;

@colorSecondary: #d05d5d;
@colorSecondaryLight: #ff8d8a;
@colorSecondaryDark: #9a2d33;

@colorBackground: #f5f5f5;
@colorActionBackground: #ECEFF1;
@colorShadow: #d0d0d0;

body {
    font-family: 'Lato', sans-serif;
    margin: 0;
}

.heebo {
    font-family: 'Heebo', sans-serif;
}

.gone {
    display: none;
}

.invisible {
    opacity: 0;
}

/* Aeon logo */

.aeon-logo {
    position: fixed;
    top: 12pt;
    right: 18pt;
    margin: 0;

    text-align: right;
    font-family: 'Heebo', sans-serif;
    color: @colorPrimary;  
    font-weight: 500;
    font-size: 24pt;      
    letter-spacing: 0.01ch;
    user-select: none;

    transform: scale(0.95, 1.0);

    span {
        color: @colorSecondary;
        font-weight: 900;
        letter-spacing: 0.1ch;
    }

    em {
        font-size: 2.4rem;
        font-style: normal;
        position: relative;
        top: 0.2rem;
    }
}

/* Dock with floating buttons. */

.aeon-dock {        
    width: 48pt;     
    z-index: 1000;
 
    /*
        Button renders the default background and shadow.
        If will stretch when the label becomes visible,
        but the animation is performed by the label.
    */
    button {
        position: relative;
        display: block;
        margin-bottom: 8pt;
        height: 48pt; 

        background-color: @colorActionBackground;
        border: 0;
        border-radius: 16pt;
        box-shadow: 0pt 2pt 5pt @colorShadow;        
        cursor: pointer;
        user-select: none;
    }

    button:focus {
        outline: none;
    }

    /*
        Image is the actual "button" part of the component.
    */
    button img {
        position: absolute;
        top: 0;
        left: 0;
        width: 32pt;
        height: 32pt;
        padding: 8pt;

        background-color: @colorActionBackground;        
        border-radius: 16pt;

        transition: background-color 0.3s;
    }

    /* When panel for that button is open, background is darker. */
    button.selected img {
        background-color: darken(@colorActionBackground, 20%);
    }

    button img:hover {
        background-color: darken(@colorActionBackground, 10%);
    }

    /*
        Label is initially hidden, but is revealed when
        image is hovered. For some reason, 39 is the width
        that makes button stretch properly.
    */
    button label {
        display: inline-block;
        width: 39pt;

        font-size: 0;      
        white-space: nowrap;        

        transition: width 0.3s;
    }

    button:not(.selected) img:hover + label {        
        font-size: 1.1rem;        
        width: 120pt;
        padding-left: 48pt; 
        font-weight: 700;       
    }
}

/* Switchable resizeable panel windows. */

.aeon-panels {
    
    &> div {
        display: none;
        width: 480pt;
        max-width: ~"min(75%, 960pt)";
        min-width: 360pt;
        resize: horizontal;
    
        background-color: @colorBackground;
        box-shadow: 0pt 2pt 5pt @colorShadow;
        padding: 8pt;
        border-radius: 8pt;
        /* This unfortunately disables vertical scrolling, but it enables floating elements outside of this div. */
        overflow-y: visible;    
        overflow-x: visible;

        h2 {
            margin: 0 auto;

            &.single-line {
                height: 16pt; /* This will align the heading with the grid. */
            }            

            user-select: none;
            text-align: center;
            font-size: 14pt;
            font-weight: 900;
        }

        h3 {
            margin: 0 auto;

            &.single-line {
                height: 16pt;
            }            

            user-select: none;
            text-align: center;
            font-size: 13pt;
            font-weight: 700;
        }
    }
    
    &> div.selected {
        display: block;    
    }

    &> div.fixed {
        resize: none;
        width: 360pt;

        /* In fixed-width panels, you can use a two-column layout. */
        .column {
            /* 360 / 2, minus 16 for padding and 1 for border. */
            width: 162pt;

            padding: 8pt;
            
            &.left {  float: left; }
            
            &.right { float: right; }
        }

        .column-separator {
            position: absolute;
            left: 50%;
            top: 0;
            bottom: 0;

            width: 1pt;
            background: darken(@colorActionBackground, 10%);
            border-radius: 2pt;
        }
    }
    
    
    /* Position panel close button. */
    .panel-close {
        position: absolute;
        top: 4pt;
        left: 4pt;
    }
    
}

/* Small image button without description */

.img-button {
    cursor: pointer;

    transition: background-color 0.3s;

    &:hover {
        background-color: darken(@colorActionBackground, 10%);
    }
}

.img-button-24 {
    .img-button();
    
    width: 16pt;
    height: 16pt;

    padding: 4pt;
    border-radius: 8pt;
}

.img-button-solid-32 {
    position: relative;
    width: 32pt;
    height: 32pt;
    cursor: pointer;
    
    transition: background-color 0.3s;
    box-shadow: 0pt 2pt 5pt @colorShadow;        
    border-radius: 8pt;
    border: 0;

    &:hover, &:focus {
        outline: none;
        background-color: darken(@colorActionBackground, 10%);
    }    

    img {
        position: absolute;
        width: 16pt;
        height: 16pt;
        top: 8pt;
        left: 8pt;
    }
}

/* Compound button is a button with two texts, typically the second text is used as description. */

.compound-button {
    display: inline-block;
    height: 40pt;
    
    padding: 0;
    font-size: 11pt;
    font-weight: 600;
    text-align: center;
    background-color: @colorActionBackground;
    border: 0;
    border-radius: 8pt;
    box-shadow: 0pt 1pt 3pt @colorShadow;        
    cursor: pointer;
    user-select: none;

    transition: background-color 0.1s;

    &:focus, &:hover {        
        outline: none;
        background-color: darken(@colorActionBackground, 10%);

        span.right {
            background-color: darken(@colorActionBackground, 20%);
        }
    }

    span {
        display: table-cell;
        height: 40pt;        
        width: 96pt;

        transition: 0.3s;
        vertical-align: middle;        

        small {
            font-size: 10pt;
        }
        
        &.left {
            width: 72pt;
        }

        &.right {
            background-color: darken(@colorActionBackground, 10%);
            border-top-right-radius: 8pt;
            border-bottom-right-radius: 8pt;
        }
    }

}

/* Invisible input is an input object that looks like a normal text, but when clicked becomes editable. */

.inline-input {
    text-align: center;

    .scroll {         
        position: relative;        

        &:hover::after { /* Show edit icon when hovered. */
            opacity: 1;
        }
    
        /* A small "edit" icon which is visible when the element is hovered. */
        &::after {
            position: absolute;
            display: block;
            right: -28pt;
            top: 0px;
            width: 16pt;
            height: 16pt;
            
            content: url('/asset/img/edit-16pt.svg');
            background-color: @colorSecondary;
            border-radius: 8pt;
            padding: 4pt;
            box-shadow: 0pt 1pt 2pt @colorShadow;                                
            
            opacity: 0;            
            transition: opacity 0.2s;
        }

        &:focus-within::after {  /* Hide edit icon when in editing mode*/
            opacity: 0;
        }

    }

    [contenteditable=true] {
        width: auto;
        display: inline-block;
        padding: 4pt;
        /* Used to hide the padding so that the positioning is relative to content, not padded content. */
        position: relative;
        left: -4pt;
        top: -4pt;
        right: -4pt;
        bottom: -4pt;
        max-width: 100%;
        max-height: 100px;
        overflow-y: scroll;    
        
        &::-webkit-scrollbar {
            display: none;
        }

        cursor: pointer;           
        border-radius: 4pt;
        border: 1px solid transparent;       
        transition: background-color 0.1s;
    
        &:focus {
            background: white;
            outline: none;            
            cursor: text;
            box-shadow: 0pt 1pt 2pt @colorShadow;                    
            //border: 1px solid black;
        }
    }

}

/* Design grid */

.design-horizontal-gridline {
    width: 100%;
    height: 1px;
    background-color: @colorPrimary;
    position: fixed;
    left: 0;
}

.design-vertical-gridline {
    height: 100%;
    width: 1px;
    background-color: @colorPrimary;
    position: fixed;
    top: 0;
}
